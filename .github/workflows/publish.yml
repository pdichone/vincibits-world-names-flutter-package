name: Publish to pub.dev

on:
  push:
    branches: [ "main" ]
    # Uncomment the following if you want to trigger the workflow on tag push as well
    # tags:
    #   - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.6' # Specify your Flutter version here

      - name: Install dependencies
        run: flutter pub get

      # Add other steps as necessary (formatting, testing, building, etc.)
      # - name: Add pub.dev token
      #   run: echo ${{ secrets.PUB_ACCESS_TOKEN }} | dart pub token add pub.dev --token

      - name: Publish to pub.dev
        run: flutter pub publish --dry-run # Replace with '--force' to actually publish
        env:
          PUB_ACCESS_TOKEN: ${{ secrets.PUB_ACCESS_TOKEN }}




# name: Publish to pub.dev

# on:
#   push:
#     branches: [ "main" ]
#     # tags:
#     #   - 'v[0-9]+.[0-9]+.[0-9]+*'

# jobs:
#   publish:
#     permissions:
#       id-token: write # Required for authentication using OIDC
#     uses: dart-lang/setup-dart/.github/workflows/publish.yml@v1

# name: Dart publish

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603

#       - name: Install dependencies
#         run: flutter pub get

#       # - name: Verify formatting
#       #   run: dart format --output=none --set-exit-if-changed .

#       - name: Analyze project source
#         run: dart analyze

#       - name: Run tests
#         run: dart test

#       # This step will publish the package if tests pass and the push is on 'main' branch
#       - name: Publish to Pub.dev
#         if: success() && github.ref == 'refs/heads/main'
#         run: dart pub publish --force
#         env:
#           PUB_ACCESS_TOKEN: ${{ secrets.PUB_DEV_ACCESS_TOKEN }}




# name: Publish to pub.dev

# on:
#   push:
#     tags:
#       - 'v[0-9]+.[0-9]+.[0-9]+*'  # This triggers the workflow on push of tags like v1.0.0, v1.0.1, etc.

# jobs:
#   publish:
#     runs-on: ubuntu-latest  # Specifies the runner environment

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3  # Checks-out your repository under $GITHUB_WORKSPACE

#       - name: Setup Dart
#         uses: dart-lang/setup-dart@v1  # Sets up Dart SDK

#       - name: Install dependencies
#         run: dart pub get  # Install package dependencies

#       - name: Publish to pub.dev
#         run: dart pub publish --force  # Replace with 'dart pub publish --force' to actually publish
#         env:
#           PUB_ACCESS_TOKEN: ${{ secrets.PUB_DEV_ACCESS_TOKEN }}  # Ensure you have this secret set in your repository settings


# name: Publish to pub.dev

# on:
#   push:
#     tags:
#       - 'v[0-9]+.[0-9]+.[0-9]+*'

# jobs:
#   publish:
#     permissions:
#       id-token: write # Required for authentication using OIDC
#     uses: dart-lang/setup-dart/.github/workflows/publish.yml@v1
#     # with:
#     #   working-directory: path/to/package/within/repository
